@page "/chats"
@using DtekShutdownCheckBotUIClient.Clients
@using DtekShutdownCheckBot.Shared.Entities
@using System.Dynamic
@inject ChatClient client

<PageTitle>Chats</PageTitle>

<h1>Chats</h1>

@if (chats == null)
{
    <p><em>Loading...</em></p>
}
else
{
    
    <fieldset class="mb-3">
        <div class="form-field">
            <label>Select chat:</label>
            <select class="form-select mb-3" @onchange="ChatSelected">
                <option value="-1">(select)</option>
                @foreach (var chat in chats)
                {
                    <option value="@chat.ChatId">@($"{chat.FirstName} {chat.LastName}")</option>
                }
            </select>
        </div>
        <div class="form-field">
            <label>Message:</label>
            <input type="text" @bind-value="message" class="form-control"/>
        </div>
        <button @onclick="SendMessage" class="btn btn-primary mb-3">Send</button>
    </fieldset>

    <table class="table">
        <thead>
        <tr>
            <th>Chat Id</th>
            <th>Name</th>
            <th>Words</th>
        </tr>
        </thead>
        
        <tbody>
        @foreach (var chat in chats)
        {
            <tr>
                <td>@chat.ChatId</td>
                <td>@($"{chat.FirstName} {chat.LastName}")</td>
                <td>@(string.Join(',',chat.Words))</td>
            </tr>
        }
        </tbody>
    </table>
}


@code{
    IEnumerable<Chat> chats;

    long chatId = -1;

    string message = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        chats = await client.GetAllAsync();
    }


    private void ChatSelected(ChangeEventArgs e)
    {
        long.TryParse((string)e.Value, out chatId);
    }

    private async Task SendMessage()
    {
        if (chatId <= 0) return;

        await client.SendMessage(chatId, message);

    }

}